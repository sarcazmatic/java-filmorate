DROP ALL OBJECTS;

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL         VARCHAR NOT NULL,
    LOGIN         VARCHAR NOT NULL,
    NAME          VARCHAR NOT NULL,
    BIRTHDAY_DATE DATE    NOT NULL
);

CREATE TABLE IF NOT EXISTS RATINGS
(
    RATING_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    RATING    VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TITLE        VARCHAR      NOT NULL,
    DESCRIPTION  VARCHAR(200) NOT NULL,
    RELEASE_DATE DATE         NOT NULL,
    DURATION     VARCHAR      NOT NULL,
    RATE         INT,
    RATING_ID    INT REFERENCES RATINGS (RATING_ID)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS
(
    FRIENDSHIP_ID     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID           INT     NOT NULL REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FRIEND_ID         INT     NOT NULL REFERENCES USERS (USER_ID) ON DELETE CASCADE,
    FRIENDSHIP_STATUS varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_LIKES
(
    FILM_LIKE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID      INT NOT NULL REFERENCES FILMS (FILM_ID) ON DELETE CASCADE,
    USER_ID      INT NOT NULL REFERENCES USERS (USER_ID) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE    VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_GENRE
(
    FILM_GENRE_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_ID INT NOT NULL REFERENCES GENRES (GENRE_ID),
    FILM_ID  INT NOT NULL REFERENCES FILMS (FILM_ID) ON DELETE CASCADE
);